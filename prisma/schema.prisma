// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
    output          = "../node_modules/.prisma/client"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Poem {
    id                  Int       @id @default(autoincrement())
    title               String
    titlePinYin         String?
    title_zh_Hant       String?
    // 内容
    content             String
    content_zh_Hant     String?
    contentPinYin       String?
    // 介绍
    introduce           String?
    introduce_zh_Hant   String?
    // 译文
    translation         String?
    translation_zh_Hant String?
    translation_en      String?
    // 注解 JSON 字符串 {文字: 解释}
    annotation          String?
    annotation_zh_Hant  String?
    author              Author    @relation(fields: [authorId], references: [id])
    authorId            Int
    // 内容分类：叙事诗、抒情诗、送别诗、边塞诗、山水田园诗、咏史诗、咏物诗、悼亡诗、讽喻诗
    classify            String?
    // 体裁分类：诗、词、曲、赋、骈文
    genre               String?
    tags                Tag[]
    createdAt           DateTime? @default(now())
    updatedAt           DateTime? @updatedAt
    views               Int       @default(0)
    cards               Card[]
}

model Card {
    id        Int       @id @default(autoincrement())
    url       String    @unique
    createdAt DateTime? @default(now())
    updatedAt DateTime? @updatedAt
    poem      Poem      @relation(fields: [poemId], references: [id])
    poemId    Int
}

model Author {
    id         Int       @id @default(autoincrement())
    name       String
    namePinYin String?
    // 介绍，可使用 HTML
    introduce  String?
    // 出生日期
    birthDate  Int?
    // 死亡日期
    deathDate  Int?
    // 朝代
    dynasty    String?
    poems      Poem[]
    createdAt  DateTime? @default(now())
    updatedAt  DateTime? @updatedAt
}

model Tag {
    id                Int       @id @default(autoincrement())
    name              String    @unique
    name_zh_Hant      String?
    poems             Poem[]
    // 1: 词牌名 2: 曲牌名
    type              String?
    type_zh_Hant      String?
    introduce         String?
    introduce_zh_Hant String?
    createdAt         DateTime? @default(now())
    updatedAt         DateTime? @updatedAt
}
